1. What happens when you initialize a repository? Why do you need to do it?

Created a repository.  The repository is where you will store the commits.  

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

You haven't committed the files yet.  You can add multiple files into the stagin area if you think they should logically be committed at the same time.  

3. How can you use the staging area to make sure you have one commit per logical change?

You can compare the staging area to the commit.  If there's multiple differences then you can submit multiple commits.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

It could be helpful when experimenting or making large changes.  You may create a version that you don't need to utilize at the moment but when the time comes that you want it you can simply merge the branches.  

5.  How do the diagrams help you visualize the branch structure?

It visually demonstrates the parent-child connections and the relationship between branches.  

6.  What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

It adds all changes made by the branch chronologically.  This way all commits are related, on the same branch, and can be compared.  

7. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

The automatic merging is faster and easier, but it may lead to complications if git doesn't recognize a conflict where there is one.  